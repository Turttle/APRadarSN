<?xml version="1.0"?>
<doc>
<assembly>
<name>
ApRadar3
</name>
</assembly>
<members>
<member name="M:ApRadar3.EnhancedGridControl.InitializeComponent">
	<summary>
InitializeComponent
</summary>
</member><member name="T:ApRadar3.EnhancedGridControl">
	<summary>
EnhancedGridControl
</summary>
</member><member name="P:ApRadar3.Chat.ChatBaseOffset">
	<summary>
 Get the chatlog base offset
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ApRadar3.Chat.POL">
	<summary>
 Process to monitor
 </summary>
	<value>POL Process</value>
	<remarks></remarks>
</member><member name="E:ApRadar3.Chat.NewLine">
	<summary>
 Event raised when a new chat line is added
 </summary>
	<param name="LineInfo">The chatline</param>
	<remarks></remarks>
</member><member name="T:ApRadar3.Chat.LineAdded">
	<summary>
 Delegate used for invoking the main thread from the chat monitor thread
 </summary>
	<param name="LineInfo">The chatline</param>
	<remarks></remarks>
</member><member name="T:ApRadar3.Chat.offsets">
	<summary>
 Enumeration to hold offset positions
 </summary>
	<remarks></remarks>
</member><member name="T:ApRadar3.Chat.ChatLine">
	<summary>
 Structure of the chatline
 </summary>
	<remarks></remarks>
</member><member name="T:ApRadar3.Chat.ThreadItems">
	<summary>
 Unused atm
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.#ctor">
	<summary>
 Create a new instance of the ChatLog class
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.Initialize">
	<summary>
 Initializes the chat monitor, checking for POL and getting the ChatBase pointer
 </summary>
	<returns>True if all is well, False if errors</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.StartLogging">
	<summary>
 Start monitoring the chatlog
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.StopLogging">
	<summary>
 Stop monitoring the chatlog
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.chattimer_tick(System.Object,System.Timers.ElapsedEventArgs)">
	<summary>
 The chatTimer tick event handler
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.getLoginfo">
	<summary>
 Sub called by the timer to get the log info
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.getoffsets">
	<summary>
 Gets the curent chatline offsets
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.GetBlockLineCount">
	<summary>
 Gets the line count in the current block
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.GetTotalChatLineCount">
	<summary>
 Gets the total line count
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.OnNewLine(ApRadar3.Chat.ChatLine)">
	<summary>
 Function called from within the thread to call the newline event.  If the SyncObject is set, it will check if InvokeRequired and do so if necessary
 </summary>
	<param name="iLineInfo"></param>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.Process">
	<summary>
 The monitoring thread
 </summary>
	<remarks>Called every 100ms by the loop timer</remarks>
</member><member name="M:ApRadar3.Chat.CleanUpString(System.Byte[],System.String,ApRadar3.Chat.ChatLine)">
	<summary>
 Cleans up the Linetext from the chatlog, removing any strange or unknown characters
 </summary>
	<param name="bytes">The bytes to perform clean up on</param>
	<param name="ChatType">The chat line type</param>
	<param name="li">the chatline structure</param>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Chat.ConvertToJPText(System.String)">
	<summary>
 Converts a string to Shift-JIS format
 </summary>
	<param name="source">The source string to convert</param>
	<returns>A string in Shift-JIS format</returns>
	<remarks>This only works if the user has support for far eastern languages installed</remarks>
</member><member name="M:ApRadar3.Chat.SetLineText(System.Int32,System.String)">
	<summary>
 Test function for changing the text ina chatline
 </summary>
	<param name="LineNumber">The line number to change</param>
	<param name="NewText">The new text to set</param>
	<remarks>Does not work properly and is not currently used</remarks>
</member><member name="M:ApRadar3.Encrypt.CreateKey">
	<summary>
 Creates the encryption key to be used for encrypting files
 </summary>
	<returns>32 Byte encryption key</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Encrypt.CreateIV">
	<summary>
 Creates the IV key to be used for encrypting files
 </summary>
	<returns>8 byte IV key</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Encrypt.EncryptData(System.String)">
	<summary>
 Encrypts the provided string
 </summary>
	<param name="Data">The data to encrypt</param>
	<returns>An encrypted string representation of the specified data</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Encrypt.EncryptData(System.Byte[])">
	<summary>
 Encrypts an array of bytes
 </summary>
	<param name="Data">the byte array to encrypt</param>
	<returns>The encrypted byte array</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Encrypt.DecryptData(System.String)">
	<summary>
 Decrypts an encrypted string
 </summary>
	<param name="Data">the encrypted string for decryption</param>
	<returns>The unencrypted string</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.Encrypt.DecryptData(System.Byte[])">
	<summary>
 Decrypts an array of encrypted bytes
 </summary>
	<param name="Data">The encrypted byte array</param>
	<returns>The decrypted </returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.CustomRenderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
	<summary>
 Raises the RenderButtonBackground event. 
 </summary>
	<param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.UpdateDockDragArgs.#ctor(System.Single,System.Single)">
	<summary>
 Summary for UpdateDockDragArgs
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_SYNC">
	<summary>
 The sound is played synchronously, and PlaySound returns after 
 the sound event completes. This is the default behavior.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_ASYNC">
	<summary>
 The sound is played asynchronously and PlaySound returns 
 immediately after beginning the sound. To terminate an 
 asynchronously played waveform sound, call PlaySound with 
 pszSound set to NULL.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_NODEFAULT">
	<summary>
 No default sound event is used. If the sound cannot be found, 
 PlaySound returns silently without playing the default sound.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_MEMORY">
	<summary>
 The pszSound parameter points to a sound loaded in memory.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_LOOP">
	<summary>
 The sound plays repeatedly until PlaySound is called again 
 with the pszSound parameter set to NULL. If this flag is 
 set, you must also set the SND_ASYNC flag.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_NOSTOP">
	<summary>
 The specified sound event will yield to another sound event 
 that is already playing. If a sound cannot be played because 
 the resource needed to generate that sound is busy playing 
 another sound, the function immediately returns False without 
 playing the requested sound.
 </summary>
	<remarks>If this flag is not specified, PlaySound attempts 
 to stop the currently playing sound so that the device can 
 be used to play the new sound.
 </remarks>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_PURGE">
	<summary>
 Stop playing wave
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_NOWAIT">
	<summary>
 If the driver is busy, return immediately without playing 
 the sound.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_ALIAS">
	<summary>
 The pszSound parameter is a system-event alias in the 
 registry or the WIN.INI file. Do not use with either 
 SND_FILENAME or SND_RESOURCE.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_FILENAME">
	<summary>
 The pszSound parameter is a file name. If the file cannot be 
 found, the function plays the default sound unless the 
 SND_NODEFAULT flag is set.
 </summary>
</member><member name="F:ApRadar3.AudioManager.SoundFlags.SND_RESOURCE">
	<summary>
 The pszSound parameter is a resource identifier; hmod must 
 identify the instance that contains the resource.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonPressedGradientBegin">
	<summary>
 Gets the starting color of the gradient used when the button is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonPressedGradientEnd">
	<summary>
 Gets the end color of the gradient used when the button is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonPressedGradientMiddle">
	<summary>
 Gets the middle color of the gradient used when the button is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonSelectedGradientBegin">
	<summary>
 Gets the starting color of the gradient used when the button is selected.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonSelectedGradientEnd">
	<summary>
 Gets the end color of the gradient used when the button is selected.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonSelectedGradientMiddle">
	<summary>
 Gets the middle color of the gradient used when the button is selected.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ButtonSelectedHighlightBorder">
	<summary>
 Gets the border color to use with ButtonSelectedHighlight.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.CheckBackground">
	<summary>
 Gets the solid color to use when the check box is selected and gradients are being used.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.GripDark">
	<summary>
 Gets the color to use for shadow effects on the grip or move handle.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.GripLight">
	<summary>
 Gets the color to use for highlight effects on the grip or move handle.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ImageMarginGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the image margin of a ToolStripDropDownMenu.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuBorder">
	<summary>
 Gets the border color or a MenuStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuItemPressedGradientBegin">
	<summary>
 Gets the starting color of the gradient used when a top-level ToolStripMenuItem is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuItemPressedGradientEnd">
	<summary>
 Gets the end color of the gradient used when a top-level ToolStripMenuItem is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuItemPressedGradientMiddle">
	<summary>
 Gets the middle color of the gradient used when a top-level ToolStripMenuItem is pressed down.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuItemSelectedGradientBegin">
	<summary>
 Gets the starting color of the gradient used when the ToolStripMenuItem is selected.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuItemSelectedGradientEnd">
	<summary>
 Gets the end color of the gradient used when the ToolStripMenuItem is selected.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuStripGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the MenuStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.MenuStripGradientEnd">
	<summary>
 Gets the end color of the gradient used in the MenuStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.OverflowButtonGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the ToolStripOverflowButton.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.OverflowButtonGradientEnd">
	<summary>
 Gets the end color of the gradient used in the ToolStripOverflowButton.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.OverflowButtonGradientMiddle">
	<summary>
 Gets the middle color of the gradient used in the ToolStripOverflowButton.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.RaftingContainerGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the ToolStripContainer.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.RaftingContainerGradientEnd">
	<summary>
 Gets the end color of the gradient used in the ToolStripContainer.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.SeparatorDark">
	<summary>
 Gets the color to use to for shadow effects on the ToolStripSeparator.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.SeparatorLight">
	<summary>
 Gets the color to use to for highlight effects on the ToolStripSeparator.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.StatusStripGradientBegin">
	<summary>
 Gets the starting color of the gradient used on the StatusStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.StatusStripGradientEnd">
	<summary>
 Gets the end color of the gradient used on the StatusStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripBorder">
	<summary>
 Gets the border color to use on the bottom edge of the ToolStrip.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripContentPanelGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the ToolStripContentPanel.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripContentPanelGradientEnd">
	<summary>
 Gets the end color of the gradient used in the ToolStripContentPanel.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripDropDownBackground">
	<summary>
 Gets the solid background color of the ToolStripDropDown.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the ToolStrip background.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripGradientEnd">
	<summary>
 Gets the end color of the gradient used in the ToolStrip background.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripGradientMiddle">
	<summary>
 Gets the middle color of the gradient used in the ToolStrip background.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripPanelGradientBegin">
	<summary>
 Gets the starting color of the gradient used in the ToolStripPanel.
 </summary>
</member><member name="P:ApRadar3.Office2007ColorTable.ToolStripPanelGradientEnd">
	<summary>
 Gets the end color of the gradient used in the ToolStripPanel.
 </summary>
</member><member name="T:ApRadar3.Office2007ColorTable">
	<summary>
 Provide Office 2007 Blue Theme colors
 </summary>
</member><member name="P:ApRadar3.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:ApRadar3.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:ApRadar3.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:ApRadar3.Office2007Renderer.#ctor">
	<summary>
 Initialize a new instance of the Office2007Renderer class.
 </summary>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderArrow(System.Windows.Forms.ToolStripArrowRenderEventArgs)">
	<summary>
 Raises the RenderArrow event. 
 </summary>
	<param name="e">An ToolStripArrowRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
	<summary>
 Raises the RenderButtonBackground event. 
 </summary>
	<param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderDropDownButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
	<summary>
 Raises the RenderDropDownButtonBackground event. 
 </summary>
	<param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderItemCheck(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
	<summary>
 Raises the RenderItemCheck event. 
 </summary>
	<param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderItemText(System.Windows.Forms.ToolStripItemTextRenderEventArgs)">
	<summary>
 Raises the RenderItemText event. 
 </summary>
	<param name="e">An ToolStripItemTextRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderItemImage(System.Windows.Forms.ToolStripItemImageRenderEventArgs)">
	<summary>
 Raises the RenderItemImage event. 
 </summary>
	<param name="e">An ToolStripItemImageRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderMenuItemBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
	<summary>
 Raises the RenderMenuItemBackground event. 
 </summary>
	<param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderSplitButtonBackground(System.Windows.Forms.ToolStripItemRenderEventArgs)">
	<summary>
 Raises the RenderSplitButtonBackground event. 
 </summary>
	<param name="e">An ToolStripItemRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderStatusStripSizingGrip(System.Windows.Forms.ToolStripRenderEventArgs)">
	<summary>
 Raises the RenderStatusStripSizingGrip event. 
 </summary>
	<param name="e">An ToolStripRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderToolStripContentPanelBackground(System.Windows.Forms.ToolStripContentPanelRenderEventArgs)">
	<summary>
 Raises the RenderToolStripContentPanelBackground event. 
 </summary>
	<param name="e">An ToolStripContentPanelRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderSeparator(System.Windows.Forms.ToolStripSeparatorRenderEventArgs)">
	<summary>
 Raises the RenderSeparator event. 
 </summary>
	<param name="e">An ToolStripSeparatorRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderToolStripBackground(System.Windows.Forms.ToolStripRenderEventArgs)">
	<summary>
 Raises the RenderToolStripBackground event. 
 </summary>
	<param name="e">An ToolStripRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderImageMargin(System.Windows.Forms.ToolStripRenderEventArgs)">
	<summary>
 Raises the RenderImageMargin event. 
 </summary>
	<param name="e">An ToolStripRenderEventArgs containing the event data.</param>
</member><member name="M:ApRadar3.Office2007Renderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
	<summary>
 Raises the RenderToolStripBorder event. 
 </summary>
	<param name="e">An ToolStripRenderEventArgs containing the event data.</param>
</member><member name="T:ApRadar3.Office2007Renderer">
	<summary>
 Draw ToolStrips using the Office 2007 themed appearance.
 </summary>
</member><member name="M:ApRadar3.AppBarModule.RegQueryValueEx(System.UIntPtr,System.String,System.IntPtr,ApRadar3.AppBarModule.RegType@,System.IntPtr,System.Int32@)">
	<summary>
 RegQueryValueEx - Queries information from the registry.
 </summary>
	<param name="keyBase"></param>
	<param name="valueName"></param>
	<param name="reserved"></param>
	<param name="type"></param>
	<param name="zero"></param>
	<param name="dataSize"></param>
	<returns></returns>
</member><member name="M:ApRadar3.AppBarModule.RegQueryValueEx(System.UIntPtr,System.String,System.IntPtr,ApRadar3.AppBarModule.RegType@,System.Byte[],System.Int32@)">
	<summary>
 RegQueryValueEx - Queries information from the registry.
 </summary>
	<param name="keyBase"></param>
	<param name="valueName"></param>
	<param name="reserved"></param>
	<param name="type"></param>
	<param name="data"></param>
	<param name="dataSize"></param>
	<returns></returns>
</member><member name="M:ApRadar3.AppBarModule.RegQueryValueEx(System.UIntPtr,System.String,System.IntPtr,ApRadar3.AppBarModule.RegType@,System.Int32@,System.Int32@)">
	<summary>
 RegQueryValueEx - Queries information from the registry.
 </summary>
	<param name="keyBase"></param>
	<param name="valueName"></param>
	<param name="reserved"></param>
	<param name="type"></param>
	<param name="data"></param>
	<param name="dataSize"></param>
	<returns></returns>
</member><member name="M:ApRadar3.ExRichTextBox.#ctor">
	<summary>
 Initializes the text colors, creates dictionaries for RTF colors and
 font families, and stores the horizontal and vertical resolution of
 the RichTextBox's graphics context.
 </summary>
</member><member name="M:ApRadar3.ExRichTextBox.#ctor(ApRadar3.RtfColor)">
	<summary>
 Calls the default constructor then sets the text color.
 </summary>
	<param name="_textColor"></param>
</member><member name="M:ApRadar3.ExRichTextBox.#ctor(ApRadar3.RtfColor,ApRadar3.RtfColor)">
	<summary>
 Calls the default constructor then sets te text and highlight colors.
 </summary>
	<param name="_textColor"></param>
	<param name="_highlightColor"></param>
</member><member name="M:ApRadar3.ExRichTextBox.AppendRtf(System.String)">
	<summary>
 Assumes the string passed as a paramter is valid RTF text and attempts
 to append it as RTF to the content of the control.
 </summary>
	<param name="_rtf"></param>
</member><member name="M:ApRadar3.ExRichTextBox.InsertRtf(System.String)">
	<summary>
 Assumes that the string passed as a parameter is valid RTF text and
 attempts to insert it as RTF into the content of the control.
 </summary>
	<remarks>
 NOTE: The text is inserted wherever the caret is at the time of the call,
 and if any text is selected, that text is replaced.
 </remarks>
	<param name="_rtf"></param>
</member><member name="M:ApRadar3.ExRichTextBox.AppendTextAsRtf(System.String)">
	<summary>
 Appends the text using the current font, text, and highlight colors.
 </summary>
	<param name="_text"></param>
</member><member name="M:ApRadar3.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font)">
	<summary>
 Appends the text using the given font, and current text and highlight
 colors.
 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
</member><member name="M:ApRadar3.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font,ApRadar3.RtfColor)">
	<summary>
 Appends the text using the given font and text color, and the current
 highlight color.
 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
	<param name="_textColor"></param>
</member><member name="M:ApRadar3.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font,ApRadar3.RtfColor,ApRadar3.RtfColor)">
	<summary>
 Appends the text using the given font, text, and highlight colors.  Simply
 moves the caret to the end of the RichTextBox's text and makes a call to
 insert.
 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
	<param name="_textColor"></param>
	<param name="_backColor"></param>
</member><member name="M:ApRadar3.ExRichTextBox.InsertTextAsRtf(System.String)">
	<summary>
 Inserts the text using the current font, text, and highlight colors.
 </summary>
	<param name="_text"></param>
</member><member name="M:ApRadar3.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font)">
	<summary>
 Inserts the text using the given font, and current text and highlight
 colors.
 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
</member><member name="M:ApRadar3.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font,ApRadar3.RtfColor)">
	<summary>
 Inserts the text using the given font and text color, and the current
 highlight color.
 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
	<param name="_textColor"></param>
</member><member name="M:ApRadar3.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font,ApRadar3.RtfColor,ApRadar3.RtfColor)">
	<summary>
 Inserts the text using the given font, text, and highlight colors.  The
 text is wrapped in RTF codes so that the specified formatting is kept.
 You can only assign valid RTF to the RichTextBox.Rtf property, else
 an exception is thrown.  The RTF string should follow this format ...
 
 {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{[FONTS]}{\colortbl ;[COLORS]}}
 \viewkind4\uc1\pard\cf1\f0\fs20 [DOCUMENT AREA] }
 
 </summary>
	<remarks>
 NOTE: The text is inserted wherever the caret is at the time of the call,
 and if any text is selected, that text is replaced.
 </remarks>
	<param name="_text"></param>
	<param name="_font"></param>
	<param name="_textColor"></param>
	<param name="_backColor "></param>
</member><member name="M:ApRadar3.ExRichTextBox.GetDocumentArea(System.String,System.Drawing.Font)">
	<summary>
 Creates the Document Area of the RTF being inserted. The document area
 (in this case) consists of the text being added as RTF and all the
 formatting specified in the Font object passed in. This should have the
 form ...
 
 \viewkind4\uc1\pard\cf1\f0\fs20 [DOCUMENT AREA] }

 </summary>
	<param name="_text"></param>
	<param name="_font"></param>
	<returns>
 The document area as a string.
 </returns>
</member><member name="M:ApRadar3.ExRichTextBox.InsertImage(System.Drawing.Image)">
	<summary>
 Inserts an image into the RichTextBox.  The image is wrapped in a Windows
 Format Metafile, because although Microsoft discourages the use of a WMF,
 the RichTextBox (and even MS Word), wraps an image in a WMF before inserting
 the image into a document.  The WMF is attached in HEX format (a string of
 HEX numbers).
 
 The RTF Specification v1.6 says that you should be able to insert bitmaps,
 .jpegs, .gifs, .pngs, and Enhanced Metafiles (.emf) directly into an RTF
 document without the WMF wrapper. This works fine with MS Word,
 however, when you don't wrap images in a WMF, WordPad and
 RichTextBoxes simply ignore them.  Both use the riched20.dll or msfted.dll.
 </summary>
	<remarks>
 NOTE: The image is inserted wherever the caret is at the time of the call,
 and if any text is selected, that text is replaced.
 </remarks>
	<param name="_image"></param>
</member><member name="M:ApRadar3.ExRichTextBox.GetImagePrefix(System.Drawing.Image)">
	<summary>
 Creates the RTF control string that describes the image being inserted.
 This description (in this case) specifies that the image is an
 MM_ANISOTROPIC metafile, meaning that both X and Y axes can be scaled
 independently.  The control string also gives the images current dimensions,
 and its target dimensions, so if you want to control the size of the
 image being inserted, this would be the place to do it. The prefix should
 have the form ...
 
 {\pict\wmetafile8\picw[A]\pich[B]\picwgoal[C]\pichgoal[D]
 
 where ...
 
 A	= current width of the metafile in hundredths of millimeters (0.01mm)
		= Image Width in Inches * Number of (0.01mm) per inch
		= (Image Width in Pixels / Graphics Context's Horizontal Resolution) * 2540
		= (Image Width in Pixels / Graphics.DpiX) * 2540
 
 B	= current height of the metafile in hundredths of millimeters (0.01mm)
		= Image Height in Inches * Number of (0.01mm) per inch
		= (Image Height in Pixels / Graphics Context's Vertical Resolution) * 2540
		= (Image Height in Pixels / Graphics.DpiX) * 2540
 
 C	= target width of the metafile in twips
		= Image Width in Inches * Number of twips per inch
		= (Image Width in Pixels / Graphics Context's Horizontal Resolution) * 1440
		= (Image Width in Pixels / Graphics.DpiX) * 1440
 
 D	= target height of the metafile in twips
		= Image Height in Inches * Number of twips per inch
		= (Image Height in Pixels / Graphics Context's Horizontal Resolution) * 1440
		= (Image Height in Pixels / Graphics.DpiX) * 1440
	
 </summary>
	<remarks>
 The Graphics Context's resolution is simply the current resolution at which
 windows is being displayed.  Normally it's 96 dpi, but instead of assuming
 I just added the code.
 
 According to Ken Howe at pbdr.com, "Twips are screen-independent units
 used to ensure that the placement and proportion of screen elements in
 your screen application are the same on all display systems."
 
 Units Used
 ----------
 1 Twip = 1/20 Point
 1 Point = 1/72 Inch
 1 Twip = 1/1440 Inch
 
 1 Inch = 2.54 cm
 1 Inch = 25.4 mm
 1 Inch = 2540 (0.01)mm
 </remarks>
	<param name="_image"></param>
	<returns></returns>
</member><member name="M:ApRadar3.ExRichTextBox.GdipEmfToWmfBits(System.IntPtr,System.UInt32,System.Byte[],System.Int32,ApRadar3.ExRichTextBox.EmfToWmfBitsFlags)">
	<summary>
 Use the EmfToWmfBits function in the GDI+ specification to convert a 
 Enhanced Metafile to a Windows Metafile
 </summary>
	<param name="_hEmf">
 A handle to the Enhanced Metafile to be converted
 </param>
	<param name="_bufferSize">
 The size of the buffer used to store the Windows Metafile bits returned
 </param>
	<param name="_buffer">
 An array of bytes used to hold the Windows Metafile bits returned
 </param>
	<param name="_mappingMode">
 The mapping mode of the image.  This control uses MM_ANISOTROPIC.
 </param>
	<param name="_flags">
 Flags used to specify the format of the Windows Metafile returned
 </param>
</member><member name="M:ApRadar3.ExRichTextBox.GetRtfImage(System.Drawing.Image)">
	<summary>
 Wraps the image in an Enhanced Metafile by drawing the image onto the
 graphics context, then converts the Enhanced Metafile to a Windows
 Metafile, and finally appends the bits of the Windows Metafile in HEX
 to a string and returns the string.
 </summary>
	<param name="_image"></param>
	<returns>
 A string containing the bits of a Windows Metafile in HEX
 </returns>
</member><member name="M:ApRadar3.ExRichTextBox.GetFontTable(System.Drawing.Font)">
	<summary>
 Creates a font table from a font object.  When an Insert or Append 
 operation is performed a font is either specified or the default font
 is used.  In any case, on any Insert or Append, only one font is used,
 thus the font table will always contain a single font.  The font table
 should have the form ...
 
 {\fonttbl{\f0\[FAMILY]\fcharset0 [FONT_NAME];}
 </summary>
	<param name="_font"></param>
	<returns></returns>
</member><member name="M:ApRadar3.ExRichTextBox.GetColorTable(ApRadar3.RtfColor,ApRadar3.RtfColor)">
	<summary>
 Creates a font table from the RtfColor structure.  When an Insert or Append
 operation is performed, _textColor and _backColor are either specified
 or the default is used.  In any case, on any Insert or Append, only three
 colors are used.  The default color of the RichTextBox (signified by a
 semicolon (;) without a definition), is always the first color (index 0) in
 the color table.  The second color is always the text color, and the third
 is always the highlight color (color behind the text).  The color table
 should have the form ...
 
 {\colortbl ;[TEXT_COLOR];[HIGHLIGHT_COLOR];}
 
 </summary>
	<param name="_textColor"></param>
	<param name="_backColor"></param>
	<returns></returns>
</member><member name="M:ApRadar3.ExRichTextBox.RemoveBadChars(System.String)">
	<summary>
 Called by overrided RichTextBox.Rtf accessor.
 Removes the null character from the RTF.  This is residue from developing
 the control for a specific instant messaging protocol and can be ommitted.
 </summary>
	<param name="_originalRtf"></param>
	<returns>RTF without null character</returns>
</member><member name="T:ApRadar3.ExRichTextBox">
	<summary>
 This class adds the following functionality to RichTextBox:
 
 1.	Allows plain text to be inserted or appended programmatically to RTF
		content.
 2.	Allows the font, text color, and highlight color of plain text to be
		specified when inserting or appending text as RTF.
	3.	Allows images to be inserted programmatically, or with interaction from
		the user.
 </summary>
	<remarks>
 Many solutions to the problem of programmatically inserting images
 into a RichTextBox use the clipboard or hard code the RTF for
 the image in the program.  This class is an attempt to make the process of
 inserting images at runtime more flexible without the overhead of maintaining
 the clipboard or the use of huge, cumbersome strings.
 
 RTF Specification v1.6 was used and is referred to many times in this document.
 http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnrtfspec/html/rtfspec.asp
 
 For information about the RichEdit (Unmanaged RichTextBox) ...
 http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/richedit/richeditcontrols/aboutricheditcontrols.asp
 </remarks>
</member><member name="M:ApRadar3.AppBarForm.processWatchTimer_Tick(System.Object,System.EventArgs)">
	<summary>
 This timer will watch for any new spawned pol processes
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ApRadar3.AppBarForm.LoadAvailableProcesses">
	<summary>
 Method to load any available pol processes
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.AppBarForm.processItem_click(System.Object,System.EventArgs)">
	<summary>
 This method handles the click event for the process items.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:ApRadar3.InputManager.MapVirtualKeyMapTypes.MAPVK_VK_TO_VSC">
	<summary>uCode is a virtual-key code and is translated into a scan code.
 If it is a virtual-key code that does not distinguish between left- and 
 right-hand keys, the left-hand scan code is returned. 
 If there is no translation, the function returns 0.
 </summary>
	<remarks></remarks>
</member><member name="F:ApRadar3.InputManager.MapVirtualKeyMapTypes.MAPVK_VSC_TO_VK">
	<summary>uCode is a scan code and is translated into a virtual-key code that
 does not distinguish between left- and right-hand keys. If there is no 
 translation, the function returns 0.
 </summary>
	<remarks></remarks>
</member><member name="F:ApRadar3.InputManager.MapVirtualKeyMapTypes.MAPVK_VK_TO_CHAR">
	<summary>uCode is a virtual-key code and is translated into an unshifted
 character value in the low-order word of the return value. Dead keys (diacritics)
 are indicated by setting the top bit of the return value. If there is no
 translation, the function returns 0.
 </summary>
	<remarks></remarks>
</member><member name="F:ApRadar3.InputManager.MapVirtualKeyMapTypes.MAPVK_VSC_TO_VK_EX">
	<summary>Windows NT/2000/XP: uCode is a scan code and is translated into a
 virtual-key code that distinguishes between left- and right-hand keys. If
 there is no translation, the function returns 0.
 </summary>
	<remarks></remarks>
</member><member name="F:ApRadar3.InputManager.MapVirtualKeyMapTypes.MAPVK_VK_TO_VSC_EX">
	<summary>Not currently documented
 </summary>
	<remarks></remarks>
</member><member name="T:ApRadar3.InputManager.MapVirtualKeyMapTypes">
	<summary>The set of valid MapTypes used in MapVirtualKey
 </summary>
	<remarks></remarks>
</member><member name="M:ApRadar3.InputManager.MapVirtualKey(System.UInt32,ApRadar3.InputManager.MapVirtualKeyMapTypes)">
	<summary>The MapVirtualKey function translates (maps) a virtual-key code into a scan
 code or character value, or translates a scan code into a virtual-key code
 </summary>
	<param name="uCode">[in] Specifies the virtual-key code or scan code for a key.
 How this value is interpreted depends on the value of the uMapType parameter</param>
	<param name="uMapType">[in] Specifies the translation to perform. The value of this
 parameter depends on the value of the uCode parameter.</param>
	<returns>Either a scan code, a virtual-key code, or a character value, depending on
 the value of uCode and uMapType. If there is no translation, the return value is zero</returns>
	<remarks></remarks>
</member><member name="M:ApRadar3.UseAntiAlias.#ctor(System.Drawing.Graphics)">
	<summary>
 Initialize a new instance of the UseAntiAlias class.
 </summary>
	<param name="g">Graphics instance.</param>
</member><member name="M:ApRadar3.UseAntiAlias.Dispose">
	<summary>
 Revert the SmoothingMode back to original setting.
 </summary>
</member><member name="T:ApRadar3.UseAntiAlias">
	<summary>
 Set the SmoothingMode=AntiAlias until instance disposed.
 </summary>
</member><member name="M:ApRadar3.UseClearTypeGridFit.#ctor(System.Drawing.Graphics)">
	<summary>
 Initialize a new instance of the UseClearTypeGridFit class.
 </summary>
	<param name="g">Graphics instance.</param>
</member><member name="M:ApRadar3.UseClearTypeGridFit.Dispose">
	<summary>
 Revert the TextRenderingHint back to original setting.
 </summary>
</member><member name="T:ApRadar3.UseClearTypeGridFit">
	<summary>
 Set the TextRenderingHint.ClearTypeGridFit until instance disposed.
 </summary>
</member><member name="M:ApRadar3.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
	<summary>
 Initialize a new instance of the UseClipping class.
 </summary>
	<param name="g">Graphics instance.</param>
	<param name="path">Clipping path.</param>
</member><member name="M:ApRadar3.UseClipping.#ctor(System.Drawing.Graphics,System.Drawing.Region)">
	<summary>
 Initialize a new instance of the UseClipping class.
 </summary>
	<param name="g">Graphics instance.</param>
	<param name="region">Clipping region.</param>
</member><member name="M:ApRadar3.UseClipping.Dispose">
	<summary>
 Revert clipping back to origina setting.
 </summary>
</member><member name="T:ApRadar3.UseClipping">
	<summary>
 Set the clipping region until instance disposed.
 </summary>
</member><member name="T:ApRadar3.MainModule.MobInfo">
	<summary>
 Mob structure
 </summary>
</member><member name="M:ApRadar3.MainModule.ValidateUser">
	<summary>
 Validates an elitemmo user agianst the elitemmo web service
 </summary>
	<returns></returns>
	<remarks></remarks>
</member>
</members>
</doc>